package com.prj.biz.api.togetherQRcodePay;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.prj.utils.pay.HttpClientConnectionManager;
import com.prj.utils.pay.PayCommonUtil;
import com.prj.utils.pay.WxpayConfig;

/**
 * @author: Fengc
 * @date:2017-8-23 下午2:44:05
 * @version :0.0.1
 * @dis:微信支付回调
 */

@Controller
@RequestMapping("/api")
public class WeixinNotifyAction {

	public static DefaultHttpClient httpclient;

	static {
		httpclient = new DefaultHttpClient();
		httpclient = (DefaultHttpClient) HttpClientConnectionManager
				.getSSLInstance(httpclient);
	}

	/**
	 * 微信获取OPENID
	 * @param code
	 * @param statue
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(value = { "/getWeixinOpenid" })
	public ModelAndView getWeixinOpenid(String code, String statue,
			HttpServletRequest request, HttpServletResponse response) {
		
		Map<String, Object> model = new HashMap<String, Object>();
		
		String jsonStr = "";
		String openid = "";
		HttpPost httpost = HttpClientConnectionManager
				.getPostMethod("https://api.weixin.qq.com/sns/oauth2/access_token?appid='"
						+ WxpayConfig.APPID
						+ "'&redirect_uri=http://hilink.chengguokj.com/XA/weixin&secret='"
						+ WxpayConfig.SECRET
						+ "'&code="
						+ code
						+ "&grant_type=authorization_code");
		try {
			HttpResponse responses = httpclient.execute(httpost);
			jsonStr = EntityUtils.toString(responses.getEntity(), "UTF-8");
			openid = jsonStr.substring(jsonStr.indexOf("openid\":\"") + 9,
					jsonStr.indexOf("\",\"scope"));
			System.out.println("openid>>>>>>>>>>>>>>>" + openid);
			String access_token = jsonStr.substring(
					jsonStr.indexOf("access_token\":\"") + 15,
					jsonStr.indexOf("\",\"expires_in"));
			System.out.println("在getOpenId中获取token:--->" + access_token);

		} catch (Exception e) {
			e.printStackTrace();
		} finally {

		}

		model.put("openid", openid);
		return new ModelAndView("/openId/weixinshowopenid",model);
	}

	@RequestMapping(value = { "/wxpayNotify" }, method = { RequestMethod.POST })
	@ResponseBody
	public String notify(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		InputStream inStream = request.getInputStream();
		ByteArrayOutputStream outSteam = new ByteArrayOutputStream();
		byte[] buffer = new byte[1024];
		int len = 0;
		while ((len = inStream.read(buffer)) != -1) {
			outSteam.write(buffer, 0, len);
		}
		String resultXml = new String(outSteam.toByteArray(), "utf-8");
		@SuppressWarnings("unchecked")
		Map<String, String> params = PayCommonUtil.doXMLParse(resultXml);
		outSteam.close();
		inStream.close();
		if (PayCommonUtil.isTenpaySign(params)
				&& "SUCCESS".equals(params.get("return_code"))
				&& "SUCCESS".equals(params.get("result_code"))) {

			return "success";
		} else {
			// 支付失败
			return "fail";
		}
	}
}

/**
 * Copyright© 2003-2013 天尔软件, All Rights Reserved <br/>
 * 描述: 业务文件 <br/>
 * @author Liang
 * @date 2017-07-26
 * @version 1.0
 */
package com.prj.biz.action.headquartersPC.redenvelope;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.prj.biz.action._base.BaseAction;
import com.prj.biz.bean.redenvelope.RedEnvelope;
import com.prj.biz.service.redenvelope.RedEnvelopeService;
import com.prj.core.bean.resp.RespBean;
import com.prj.core.bean.resp.RespPagination;
import com.prj.utils.random.RedPacketUtil;



/** 
 * 描述: 红包 Action 类<br>
 * @author Liang
 * @date 2017-07-26
 */
@RestController
@RequestMapping("/headquarters/redEnvelope")
public class RedEnvelopeAction extends BaseAction
{
	private static final long	serialVersionUID	= 1L;
	
	@Resource
	private RedEnvelopeService redEnvelopeService;

	/**
	 * 描述: 进入列表显示页面
	 * @auther Liang
	 * @date 2017-07-26
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doEnRedEnvelopeList")
    public ModelAndView doEnRedEnvelopeListAction(HttpServletRequest request,HttpServletResponse response) throws Exception
	{
		return new ModelAndView("/headquarters/redenvelope/redEnvelopeList");
	}
	
	/**
	 * 描述: 分页查询信息
	 * @auther Liang
	 * @date 2017-07-26
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doReadRedEnvelopeList")
	@ResponseBody
	public RespBean<RespPagination<RedEnvelope>> doReadRedEnvelopeList(RedEnvelope redEnvelope) throws Exception{
		RespBean<RespPagination<RedEnvelope>> respBean = new RespBean<RespPagination<RedEnvelope>>();
		RespPagination<RedEnvelope> respPagination = new RespPagination<RedEnvelope>();
		Integer total = redEnvelopeService.doGetTotal(redEnvelope);
		List<RedEnvelope> redEnvelopeList = redEnvelopeService.doGetList(redEnvelope);
		respPagination.setTotal(total);
		respPagination.setRows(redEnvelopeList);
		respBean.setBody(respPagination);
		return respBean;
	}
	/**
	 * 描述: 进入新增页面
	 * @auther Liang
	 * @date 2017-07-26
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doEnRedEnvelopeAdd")
    public ModelAndView doEnRedEnvelopeAddAction(HttpServletRequest request,HttpServletResponse response) throws Exception
	{
		return new ModelAndView("/headquarters/redenvelope/redEnvelopeAdd");
	}
	/**
	 * 描述: 编辑保存
	 * @auther Liang
	 * @date 2017-07-26
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doSaveRedEnvelope")
	public RespBean<String> doSaveRedEnvelope(RedEnvelope redEnvelope) throws Exception{
		RespBean<String> respBean = new RespBean<String>();
		//固定红包 均分
		if ("1".equals(redEnvelope.getRedEnvelopeState())) {
			/*if(){
				
			}*/
		}
		//随机红包 随机分配
		if ("0".equals(redEnvelope.getRedEnvelopeState())) {
			RedPacketUtil util = new RedPacketUtil(Float.parseFloat(redEnvelope.getMinPrice()),Float.parseFloat(redEnvelope.getMaxPrice()));
			List<Float> folats=util.splitRedPackets(Float.parseFloat(redEnvelope.getTotalPrice()), Integer.parseInt(redEnvelope.getNumber()));
		
		}
		
		return respBean;
	}
	/**
	 * 描述: 进入编辑页面
	 * @auther Liang
	 * @date 2017-07-26
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnRedEnvelopeEdit")
	public ModelAndView doEnRedEnvelopeEdit(String redEnvelopeId) throws Exception{
		RedEnvelope redEnvelope = redEnvelopeService.doGetById(redEnvelopeId);
		Map<String, Object> model = new HashMap<String, Object>();
		model.put("redEnvelope", redEnvelope);
		return new ModelAndView("/headquarters/redenvelope/redEnvelopeEdit",model);
	}
	
	/**
	 * 描述: 编辑保存
	 * @auther Liang
	 * @date 2017-07-26
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEditRedEnvelope")
	public RespBean<RedEnvelope> doEditRedEnvelope(RedEnvelope redEnvelope) throws Exception{
		RespBean<RedEnvelope> respBean = new RespBean<RedEnvelope>();
		redEnvelopeService.doModById(redEnvelope);
		return respBean;
	}
	
	/**
	 * 描述: 删除
	 * @auther Liang
	 * @date 2017-07-26
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doDelRedEnvelope")
	@ResponseBody
	public RespBean<String> doDelRedEnvelopeAction(String redEnvelopeIds) throws Exception{
		RespBean<String> respBean = new RespBean<String>();
		redEnvelopeService.doRmByIds(redEnvelopeIds);
		respBean.setBody("删除成功");
		return respBean;
	}
	
}

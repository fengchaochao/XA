/**
 * Copyright© 2003-2013 天尔软件, All Rights Reserved <br/>
 * 描述: 业务文件 <br/>
 * @author Liang
 * @date 2017-07-10
 * @version 1.0
 */
package com.prj.biz.action.headquartersPC.agent;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.prj.biz.bean.agent.Agent;
import com.prj.biz.bean.codeareas.codeAreas;
import com.prj.biz.bean.distribution.Distribution;
import com.prj.biz.bean.sysuser.SysUser;
import com.prj.biz.service.agent.AgentService;
import com.prj.biz.service.codeareas.codeAreasService;
import com.prj.biz.service.distribution.DistributionService;
import com.prj.biz.service.sysuser.SysUserService;
import com.prj.biz.action._base.BaseAction;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.prj.core.bean.resp.RespBean;
import com.prj.core.bean.resp.RespPagination;
import com.prj.utils.UfdmDateUtil;
import com.prj.utils.UfdmMd5Util;
import com.prj.utils.UfdmRandomlyGenerated;

/**
 * 描述: 代理商客户信息 Action 类<br>
 * 
 * @author Liang
 * @date 2017-07-10
 */
@RestController
@RequestMapping("/headquarters/agent")
public class AgentAction extends BaseAction {
	private static final long serialVersionUID = 1L;

	@Resource
	private AgentService agentService;
	@Resource
	private codeAreasService codeAreasService;
	@Resource
	private SysUserService sysUserService;

	/**
	 * 描述: 进入列表显示页面
	 * 
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/doEnAgentList")
	public ModelAndView doEnAgentListAction(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		return new ModelAndView("/headquarters/agent/agentList");
	}

	/**
	 * 描述: 分页查询信息
	 * 
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doReadAgentList")
	@ResponseBody
	public RespBean<RespPagination<Agent>> doReadAgentList(Agent agent)
			throws Exception {
		RespBean<RespPagination<Agent>> respBean = new RespBean<RespPagination<Agent>>();
		RespPagination<Agent> respPagination = new RespPagination<Agent>();
		Integer total = agentService.doGetTotal(agent);
		List<Agent> agentList = agentService.doGetList(agent);
		respPagination.setTotal(total);
		respPagination.setRows(agentList);
		respBean.setBody(respPagination);
		return respBean;
	}

	/**
	 * 描述: 进入添加页面
	 * 
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnAgentAdd")
	public ModelAndView doEnAgentAdd() throws Exception {
		Map<String, Object> model = new HashMap<String, Object>();
		int i = (int) (Math.random() * 900) + 100;
		String agentCode = "YJKD" + UfdmDateUtil.getCurrentDate1()
				+ UfdmDateUtil.getCurrentSimpleTime1() + i;
		model.put("agentCode", agentCode);
		return new ModelAndView("/headquarters/agent/agentAdd", model);
	}

	/**
	 * 描述: 保存数据
	 * 
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doSaveAgent")
	public RespBean<Agent> doSaveAgent(Agent agent) throws Exception {
		RespBean<Agent> respBean = new RespBean<Agent>();
		agent.setConsumersNumber("100");
		agentService.doSave(agent);
		SysUser sysUser1 = new SysUser();
		sysUser1.setLoginName(agent.getPhone());
		List<SysUser> sysUserList = sysUserService.doGetList(sysUser1);
		if (sysUserList.size() < 0) {
			SysUser sysUser = new SysUser();
			sysUser.setLoginName(agent.getPhone());
			sysUser.setMobile(agent.getPhone());
			sysUser.setLoginPass(UfdmMd5Util.MD5Encode("123456"));
			sysUser.setRealName(agent.getAgentName());
			sysUser.setMerchantsId(agent.getId());
			sysUser.setUserStatus("0");
			sysUserService.doSave(sysUser);
		}

		respBean.setBody(agent);
		return respBean;
	}

	/**
	 * 描述: 进入编辑页面
	 * 
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnAgentEdit")
	public ModelAndView doEnAgentEdit(String agentId) throws Exception {
		Agent agent = agentService.doGetById(agentId);
		Map<String, Object> model = new HashMap<String, Object>();
		codeAreas codeAreas = new codeAreas();
		codeAreas.setAgentId(agentId);
		List<codeAreas> codeAreasList = codeAreasService.doGetList(codeAreas);
		String business = agent.getBusinessLicensePhoto();
		String[] businessLicensePhoto = null;
		if (business != null && !"".equals(business)) {
			businessLicensePhoto = agent.getBusinessLicensePhoto().split(",");
		}

		String[] idNoPhoto = agent.getIdNoPhoto().split(",");
		model.put("agent", agent);
		model.put("codeAreasList", codeAreasList);
		model.put("businessLicensePhoto", businessLicensePhoto);
		model.put("idNoPhoto", idNoPhoto);
		return new ModelAndView("/headquarters/agent/agentEdit", model);
	}

	/**
	 * 描述: 修改信息
	 * 
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEditAgent")
	public RespBean<Agent> doEditAgent(Agent agent) throws Exception {
		RespBean<Agent> respBean = new RespBean<Agent>();
		Agent agent1 = agentService.doGetById(agent.getId());
		agent1.setAgentName(agent.getAgentName());
		agent1.setPhone(agent.getPhone());
		agent1.setAddress(agent.getAddress());
		agentService.doModById(agent1);
		respBean.setBody(agent1);
		return respBean;
	}

	/**
	 * 描述: 停用 启用
	 * 
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/doDelAgent")
	@ResponseBody
	public RespBean<String> doDelAgentAction(String agentId) throws Exception {
		RespBean<String> respBean = new RespBean<String>();
		Agent agent = agentService.doGetById(agentId);
		SysUser sysUser1 = new SysUser();
		sysUser1.setMerchantsId(agentId);
		List<SysUser> sysUserList = sysUserService.doGetList(sysUser1);
		if (agent != null) {
			if ("0".equals(agent.getAgentState())) {
				agent.setAgentState("1");
				if (sysUserList.size() > 0) {
					sysUserList.get(0).setUserStatus("1");
					sysUserService.doModById(sysUserList.get(0));
				}
				respBean.setBody("停用成功！");

			} else {
				agent.setAgentState("0");
				if (sysUserList.size() > 0) {
					sysUserList.get(0).setUserStatus("0");
					sysUserService.doModById(sysUserList.get(0));
				}
				respBean.setBody("启用成功！");

			}
		}

		agentService.doModById(agent);
		return respBean;
	}

}

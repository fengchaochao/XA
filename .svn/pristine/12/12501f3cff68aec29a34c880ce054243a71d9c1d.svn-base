/**
 * Copyright© 2003-2013 天尔软件, All Rights Reserved <br/>
 * 描述: 业务文件 <br/>
 * @author Liang
 * @date 2017-07-10
 * @version 1.0
 */
package com.prj.biz.action.headquarters.agent;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.prj.biz.bean.agent.Agent;
import com.prj.biz.service.agent.AgentService;
import com.prj.biz.action._base.BaseAction;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.prj.core.bean.resp.RespBean;
import com.prj.core.bean.resp.RespPagination;
import com.prj.utils.UfdmDateUtil;
import com.prj.utils.UfdmRandomlyGenerated;



/** 
 * 描述: 代理商客户信息 Action 类<br>
 * @author Liang
 * @date 2017-07-10
 */
@RestController
@RequestMapping("/headquarters/agent")
public class AgentAction extends BaseAction
{
	private static final long	serialVersionUID	= 1L;
	
	@Resource
	private AgentService agentService;

	/**
	 * 描述: 进入列表显示页面
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doEnAgentList")
    public ModelAndView doEnAgentListAction(HttpServletRequest request,HttpServletResponse response) throws Exception
	{
		return new ModelAndView("/headquarters/agent/agentList");
	}
	
	/**
	 * 描述: 分页查询信息
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doReadAgentList")
	@ResponseBody
	public RespBean<RespPagination<Agent>> doReadAgentList(Agent agent) throws Exception{
		RespBean<RespPagination<Agent>> respBean = new RespBean<RespPagination<Agent>>();
		RespPagination<Agent> respPagination = new RespPagination<Agent>();
		Integer total = agentService.doGetTotal(agent);
		List<Agent> agentList = agentService.doGetList(agent);
		respPagination.setTotal(total);
		respPagination.setRows(agentList);
		respBean.setBody(respPagination);
		return respBean;
	}
	
	/**
	 * 描述: 进入添加页面
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnAgentAdd")
	public ModelAndView doEnAgentAdd() throws Exception{
		Map<String, Object> model = new HashMap<String, Object>();
		String str=UfdmRandomlyGenerated.getStringRandom(3);
		 int i=(int)(Math.random()*900)+100;
		String agentCode="YJK"+UfdmDateUtil.getCurrentDate1()+UfdmDateUtil.getCurrentSimpleTime1()+i;
		model.put("agentCode", agentCode);
		return new ModelAndView("/headquarters/agent/agentAdd",model);
	}
	/**
	 * 描述: 进入编辑页面
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnAgentEdit")
	public ModelAndView doEnAgentEdit(String agentId) throws Exception{
		Agent agent = agentService.doGetById(agentId);
		Map<String, Object> model = new HashMap<String, Object>();
		model.put("agent", agent);
		return new ModelAndView("/headquarters/agent/agentEdit",model);
	}
	
	/**
	 * 描述: 编辑保存
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEditAgent")
	public RespBean<Agent> doEditAgent(Agent agent) throws Exception{
		RespBean<Agent> respBean = new RespBean<Agent>();
		agentService.doModById(agent);
		return respBean;
	}
	
	/**
	 * 描述: 删除
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doDelAgent")
	@ResponseBody
	public RespBean<String> doDelAgentAction(String agentIds) throws Exception{
		RespBean<String> respBean = new RespBean<String>();
		agentService.doRmByIds(agentIds);
		respBean.setBody("删除成功");
		return respBean;
	}
	
}

/**
 * Copyright© 2003-2013 天尔软件, All Rights Reserved <br/>
 * 描述: 业务文件 <br/>
 * @author Liang
 * @date 2017-07-13
 * @version 1.0
 */
package com.prj.biz.action.headquartersPC.goods;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.SecurityUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.prj.biz.action._base.BaseAction;
import com.prj.biz.bean.agent.Agent;
import com.prj.biz.bean.goods.Goods;
import com.prj.biz.bean.goodsclassification.GoodsClassification;
import com.prj.biz.bean.goodsspecifications.GoodsSpecifications;
import com.prj.biz.bean.sysuser.SysUser;
import com.prj.biz.service.goods.GoodsService;
import com.prj.biz.service.goodsclassification.GoodsClassificationService;
import com.prj.biz.service.goodsspecifications.GoodsSpecificationsService;
import com.prj.core.bean.resp.RespBean;
import com.prj.core.bean.resp.RespPagination;
import com.prj.core.constant.SysConstants;



/** 
 * 描述: 商品信息 Action 类<br>
 * @author Liang
 * @date 2017-07-13
 */
@RestController
@RequestMapping("/headquarters/goods")
public class GoodsAction extends BaseAction
{
	private static final long	serialVersionUID	= 1L;
	
	@Resource
	private GoodsService goodsService;
	
	@Resource
	private GoodsClassificationService goodsClassificationService;
	
	@Resource
	private GoodsSpecificationsService goodsSpecificationsService;

	/**
	 * 描述: 进入列表显示页面
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doEnGoodsList")
    public ModelAndView doEnGoodsListAction(HttpServletRequest request,HttpServletResponse response) throws Exception
	{
		Map<String, Object> model = new HashMap<String, Object>();
		List<GoodsClassification> goodsClassificationList=goodsClassificationService.doGetList(null);
		model.put("goodsClassificationList", goodsClassificationList);
		return new ModelAndView("/headquarters/goods/goodsList",model);
	}
	
	/**
	 * 描述: 分页查询信息
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doReadGoodsList")
	@ResponseBody
	public RespBean<RespPagination<Goods>> doReadGoodsList(Goods goods) throws Exception{
		RespBean<RespPagination<Goods>> respBean = new RespBean<RespPagination<Goods>>();
		RespPagination<Goods> respPagination = new RespPagination<Goods>();
		Integer total = goodsService.doGetTotal(goods);
		List<Goods> goodsList = goodsService.doGetList(goods);
		respPagination.setTotal(total);
		respPagination.setRows(goodsList);
		respBean.setBody(respPagination);
		return respBean;
	}
	/**
	 * 描述: 进入添加页面
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnGoodsAdd")
	public ModelAndView doEnGoodsAdd() throws Exception{
		Map<String, Object> model = new HashMap<String, Object>();
		List<GoodsClassification> goodsClassificationList=goodsClassificationService.doGetList(null);
		model.put("goodsClassificationList", goodsClassificationList);
		return new ModelAndView("/headquarters/goods/goodsAdd",model);
	}
	/**
	 * 描述: 保存数据
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doSaveGoods")
	public RespBean<Goods> doSaveGoods(Goods goods,String specifications) throws Exception{
		RespBean<Goods> respBean = new RespBean<Goods>();
		//发布人
		SysUser sysUsers = (SysUser)(SecurityUtils.getSubject().getSession().getAttribute(SysConstants.SESSION_SYS_USER));
		goods.setPublisher(sysUsers.getId());
		goods.setGoodsState("0");
		goodsService.doSave(goods);
		String[] specificationsList=specifications.split(",");
		for (int i = 0; i < specificationsList.length; i++) {
			if(specificationsList[i]!=null&&specificationsList[i]!=""){
				String[] specification=specificationsList[i].split("@");
				GoodsSpecifications goodsSpecifications=new GoodsSpecifications();
				goodsSpecifications.setSpecificationsName(specification[0]);
				goodsSpecifications.setInventory(Integer.parseInt(specification[1]));
				goodsSpecifications.setPrice(Double.parseDouble(specification[2]));
				goodsSpecifications.setGoodsId(goods.getId());
				goodsSpecificationsService.doSave(goodsSpecifications);
			}
		}
		respBean.setBody(goods);
		return respBean;
	}
	/**
	 * 描述: 进入编辑页面
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnGoodsEdit")
	public ModelAndView doEnGoodsEdit(String goodsId) throws Exception{
		Goods goods = goodsService.doGetById(goodsId);
		Map<String, Object> model = new HashMap<String, Object>();
		List<GoodsClassification> goodsClassificationList=goodsClassificationService.doGetList(null);
		//商品规格
		GoodsSpecifications goodsSpecifications=new GoodsSpecifications();
		goodsSpecifications.setGoodsId(goodsId);
		List<GoodsSpecifications>	goodsSpecificationsList=goodsSpecificationsService.doGetList(goodsSpecifications);
		
		String[] commodityImages=goods.getCommodityImages().split(",");
		model.put("goodsClassificationList", goodsClassificationList);
		model.put("goodsSpecificationsList", goodsSpecificationsList);
		model.put("commodityImages", commodityImages);
		model.put("goods", goods);
		return new ModelAndView("/headquarters/goods/goodsEdit",model);
	}
	
	/**
	 * 描述: 编辑保存
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEditGoods")
	public RespBean<Goods> doEditGoods(Goods goods,String specifications) throws Exception{
		RespBean<Goods> respBean = new RespBean<Goods>();
		goodsService.doModById(goods);
		//删除规格表原有的数据
		GoodsSpecifications goodsSpecifications1=new GoodsSpecifications();
		goodsSpecifications1.setGoodsId(goods.getId());
		List<GoodsSpecifications>	goodsSpecificationsList=goodsSpecificationsService.doGetList(goodsSpecifications1);
		for (int i = 0; i < goodsSpecificationsList.size(); i++) {
			if(goodsSpecificationsList.get(i)!=null){
				goodsSpecificationsService.doRmById(goodsSpecificationsList.get(i).getId());
			}
		}
		
		String[] specificationsList=specifications.split(",");
		for (int i = 0; i < specificationsList.length; i++) {
			if(specificationsList[i]!=null&&specificationsList[i]!=""){
				String[] specification=specificationsList[i].split("@");
				GoodsSpecifications goodsSpecifications=new GoodsSpecifications();
				goodsSpecifications.setSpecificationsName(specification[0]);
				goodsSpecifications.setInventory(Integer.parseInt(specification[1]));
				goodsSpecifications.setPrice(Double.parseDouble(specification[2]));
				goodsSpecifications.setGoodsId(goods.getId());
				goodsSpecificationsService.doSave(goodsSpecifications);
			}
		}
		respBean.setBody(goods);
		return respBean;
	}
	/**
	 * 描述: 进入详情页面
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/doEnGoodsView")
	public ModelAndView doEnGoodsView(String goodsId) throws Exception{
		Goods goods = goodsService.doGetById(goodsId);
		Map<String, Object> model = new HashMap<String, Object>();
		List<GoodsClassification> goodsClassificationList=goodsClassificationService.doGetList(null);
		//商品规格
		GoodsSpecifications goodsSpecifications=new GoodsSpecifications();
		goodsSpecifications.setGoodsId(goodsId);
		List<GoodsSpecifications>	goodsSpecificationsList=goodsSpecificationsService.doGetList(goodsSpecifications);
		
		String[] commodityImages=goods.getCommodityImages().split(",");
		model.put("goodsClassificationList", goodsClassificationList);
		model.put("goodsSpecificationsList", goodsSpecificationsList);
		model.put("commodityImages", commodityImages);
		model.put("goods", goods);
		return new ModelAndView("/headquarters/goods/goodsView",model);
	}
	
	/**
	 * 描述: 删除
	 * @auther Liang
	 * @date 2017-07-13
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doDelGoods")
	@ResponseBody
	public RespBean<String> doDelGoodsAction(String goodsIds) throws Exception{
		RespBean<String> respBean = new RespBean<String>();
		goodsService.doRmByIds(goodsIds);
		respBean.setBody("删除成功");
		return respBean;
	}
	/**
	 * 描述: 提交审核
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doCheckGoods")
	@ResponseBody
	public RespBean<Goods> doCheckGoodsAction(String goodsId) throws Exception{
		RespBean<Goods> respBean = new RespBean<Goods>();
		Goods goods = goodsService.doGetById(goodsId);
		goods.setGoodsState("1");
		goodsService.doModById(goods);
		respBean.setBody(goods);
		return respBean;
	}
	/**
	 * 描述: 商品下架
	 * @auther Liang
	 * @date 2017-07-10
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/doShelvesGoods")
	@ResponseBody
	public RespBean<Goods> doShelvesGoodsAction(String goodsId) throws Exception{
		RespBean<Goods> respBean = new RespBean<Goods>();
		Goods goods = goodsService.doGetById(goodsId);
		goods.setGoodsState("4");
		goodsService.doModById(goods);
		respBean.setBody(goods);
		return respBean;
	}
}

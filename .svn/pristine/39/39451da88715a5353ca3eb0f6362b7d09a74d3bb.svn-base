package com.prj.biz.api.sellerCenter;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.druid.support.json.JSONUtils;
import com.prj.biz.bean.businessinformation.BusinessInformation;
import com.prj.biz.bean.consumers.Consumers;
import com.prj.biz.bean.consumersaccount.ConsumersAccount;
import com.prj.biz.service.businessinformation.BusinessInformationService;
import com.prj.biz.service.consumers.ConsumersService;
import com.prj.biz.service.consumersaccount.ConsumersAccountService;
import com.prj.utils.JsonUtils;

/**
 * @author: Fengc
 * @date:2017-7-18 下午2:48:33
 * @version :0.0.1
 * @dis:App商家中心API_ACTION,
 */
@Controller
@RequestMapping("/api")
public class SellerCenterAction {

	@Autowired
	private BusinessInformationService businessInformationService;

	@Autowired
	private ConsumersAccountService consumersAccountService;

	/**
	 * 客户管理->锁定的消费者
	 * 
	 * @param request
	 * @param response
	 * @param sellerId
	 *            商家ID
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/lockedCustomerList")
	@ResponseBody
	public String lockedCustomerList(HttpServletRequest request,
			HttpServletResponse response, String sellerId) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			ConsumersAccount consumersAccount = new ConsumersAccount();
			consumersAccount.setBusinessInformationId(sellerId);
			List<ConsumersAccount> consumerss = consumersAccountService.doGetList(consumersAccount);
			map.put("code", "1");
			map.put("data", consumerss);
			map.put("msg", "获取锁定的消费者成功！");
		} catch (Exception e) {
			map.put("code", "0");
			map.put("data", "");
			map.put("msg", "获取锁定的消费者失败！");
		}
		
		return JsonUtils.toJson(map);
	}
	
	/**
	 * 推荐的商家
	 * @param request
	 * @param response
	 * @param sellerId 商家Id
	 * @return
	 */
	@RequestMapping(value = "/RecommendBusinessList")
	@ResponseBody
	public String RecommendBusinessList(HttpServletRequest request,
			HttpServletResponse response, String sellerId) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			BusinessInformation information = new BusinessInformation();
			information.setFounder(sellerId);
			List<BusinessInformation> informations = businessInformationService.doGetList(information);
			map.put("code", "1");
			map.put("data", informations);
			map.put("msg", "获取获取【推广的商家】列表成功！");
		} catch (Exception e) {
			map.put("code", "0");
			map.put("data", "");
			map.put("msg", "获取【推广的商家】失败！");
		}
		
		return JsonUtils.toJson(map);
	}
	
	//推荐商家-新增
	@RequestMapping(value = "/RecommendBusiness")
	@ResponseBody
	public String RecommendBusiness(HttpServletRequest request,
			HttpServletResponse response, BusinessInformation sellerId) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			
			map.put("code", "1");
			map.put("data", "");
			map.put("msg", "获取获取【推广的商家】列表成功！");
		} catch (Exception e) {
			map.put("code", "0");
			map.put("data", "");
			map.put("msg", "获取【推广的商家】失败！");
		}
		
		return JsonUtils.toJson(map);
	}
}
